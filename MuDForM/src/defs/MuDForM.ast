language MuDForM

model MuDForM_Model {
    name: identifier;
    units: ConceptTypeDefinitions[];
}

modelunit ConceptTypeDefinitions {
    name: identifier;
    doc?: string;
    values: ValueTypeDef[];
    entities: EntityTypeDef[];
    transitions: TransitionTypeDef[];
}

concept ValueTypeDef {
  name: identifier;
  doc?: string;
  type: ValueType;
}

abstract concept ValueType {}

concept SimpleValueType base ValueType {
    primitive_type: DatomicType;
}

limited DatomicType {
  name: identifier;
  bigdec;
  bigint;
  boolean;
  bytes;
  double;
  float;
  instant;
  keyword;
  long;
  string;
  symbol;
  uuid;
  uri;
}

concept ProductValueType base ValueType {
    fields: TypeField[];
}

concept SumValueType base ValueType {
    fields: TypeField[];
}

concept TypeField {
    label: string;
    type: ValueType;
}

concept ListValueType base ValueType {
    list: ValueType; // this list is homogeneous
}

concept ValueTypeReference base ValueType {
    reference defRef: ValueTypeDef;
}

concept EntityTypeDef {
    name: identifier;
    doc?: string;
    properties: ValueAttribute[];
    relations: ReferenceAttribute[];
}

concept TransitionTypeDef {
    name: identifier;
    doc?: string;
    parameters: ValueAttribute[];
    involvements: ReferenceAttribute[];
}

concept ValueAttribute {
    label: string;
    reference valueRef: ValueTypeDef;
}

concept ReferenceAttribute {
    label: string;
    reference entityRef: EntityTypeDef;
}


