// Generated by the Freon Language Generator.
import { FreNode, Box, FreProjection, FreTableDefinition, BoxFactory, BoxUtil, MultiLineTextBox } from "@freon4dsl/core";
import { Doc } from "../language/gen/index.js";

/**
 * Class CustomMuDForM_ModelProjection provides an entry point for the language engineer to
 * define custom build additions to the editor.
 * These are merged with the custom build additions and other definition-based editor parts
 * in a three-way manner. For each modelelement,
 * (1) if a custom build creator/behavior is present, this is used,
 * (2) if a creator/behavior based on one of the editor definition is present, this is used,
 * (3) if neither (1) nor (2) yields a result, the default is used.
 */
export class CustomMuDForM_ModelProjection implements FreProjection {
    name: string = "Custom";
    nodeTypeToBoxMethod: Map<string, (node: FreNode) => Box> = new Map<string, (node: FreNode) => Box>([
        // register your custom box methods here
        ['Doc', this.createDocumentation],
    ]);
    nodeTypeToTableDefinition: Map<string, () => FreTableDefinition> = new Map<string, () => FreTableDefinition>([
        // register your custom table definition methods here
        // ['NAME_OF_CONCEPT', this.TABLE_DEFINITION_FOR_CONCEPT],
    ]);

    // add your custom methods here

    // BOX_FOR_CONCEPT(node: NAME_OF_CONCEPT) : Box { ... }

    // TABLE_DEFINITION_FOR_CONCEPT() : FreTableDefinition { ... }

    createDocumentation (doc: Doc): Box {
        return BoxFactory.horizontalLayout(
            doc,
            "Documentation-hlist-line-0",
            "",
            [
                BoxUtil.labelBox(doc, "doc", "top-1-line-0-item-0"),
                // BoxUtil.textBox(this._element as Documentation, "text"),
                new MultiLineTextBox(doc, "exampleunit-documentation",
                    () => { return doc.text},
                    (t: string) => { doc.text = t}
                ),
            ],
            { selectable: false }
        );
    }
}
