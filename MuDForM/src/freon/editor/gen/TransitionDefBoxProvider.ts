// Generated by the Freon Language Generator.
import { Box, BoxUtil, FreBoxProvider, FreProjectionHandler, BoxFactory } from "@freon4dsl/core";

import { TransitionDef } from "../../language/gen/index.js";

/**
 * This class implements the box provider for a single node of type TransitionDef.
 * The box provider is able to create the (tree of) boxes for the node, based
 * on the projections that are currently selected by the user.
 * The top of the tree of boxes is always a box of type ElementBox, which is
 * a box that will never be rendered itself, only its content will. Thus, we
 * have a stable entry in the complete box tree for every FreNode node.
 */
export class TransitionDefBoxProvider extends FreBoxProvider {
    constructor(mainHandler: FreProjectionHandler) {
        super(mainHandler);
        this.knownBoxProjections = ["default"];
        this.knownTableProjections = ["default"];
        this.conceptName = "TransitionDef";
    }

    protected getContent(projectionName: string): Box {
        // console.log("GET CONTENT " + this._node?.freId() + ' ' +  this._node?.freLanguageConcept() + ' ' + projectionName);
        // see if we need to use a custom projection
        if (!this.knownBoxProjections.includes(projectionName) && !this.knownTableProjections.includes(projectionName)) {
            const BOX: Box = this.mainHandler.executeCustomProjection(this._node, projectionName);
            if (!!BOX) {
                // found one, so return it
                return BOX;
            }
        } else {
            // select the box to return based on the projectionName
            if (projectionName === "default") {
                return this.getDefault();
            }
        }
        // in all other cases, return the default
        return this.getDefault();
    }

    private getDefault(): Box {
        return BoxFactory.verticalLayout(this._node as TransitionDef, "TransitionDef-overall", "", [
            BoxFactory.horizontalLayout(
                this._node as TransitionDef,
                "TransitionDef-hlist-line-0",
                "",
                [
                    BoxUtil.labelBox(this._node as TransitionDef, "TransitionDef", "top-1-line-0-item-0"),
                    BoxUtil.textBox(this._node as TransitionDef, "name"),
                    BoxUtil.labelBox(this._node as TransitionDef, "\{", "top-1-line-0-item-2"),
                ],
                { selectable: false },
            ),
            BoxUtil.indentBox(
                this._node as TransitionDef,
                4,
                "1",
                BoxFactory.horizontalLayout(
                    this._node as TransitionDef,
                    "TransitionDef-hlist-line-1",
                    "",
                    [
                        BoxUtil.labelBox(this._node as TransitionDef, "doc", "top-1-line-1-item-0"),
                        BoxUtil.textBox(this._node as TransitionDef, "doc"),
                    ],
                    { selectable: false },
                ),
            ),
            BoxUtil.indentBox(
                this._node as TransitionDef,
                4,
                "2",
                BoxUtil.labelBox(this._node as TransitionDef, "parameters", "top-1-line-2-item-0"),
            ),
            BoxUtil.indentBox(
                this._node as TransitionDef,
                8,
                "3",
                BoxUtil.verticalPartListBox(
                    this._node as TransitionDef,
                    (this._node as TransitionDef).parameters,
                    "parameters",
                    null,
                    this.mainHandler,
                ),
            ),
            BoxUtil.indentBox(
                this._node as TransitionDef,
                4,
                "4",
                BoxUtil.labelBox(this._node as TransitionDef, "involvements", "top-1-line-4-item-0"),
            ),
            BoxUtil.indentBox(
                this._node as TransitionDef,
                8,
                "5",
                BoxUtil.verticalPartListBox(
                    this._node as TransitionDef,
                    (this._node as TransitionDef).involvements,
                    "involvements",
                    null,
                    this.mainHandler,
                ),
            ),
            BoxUtil.labelBox(this._node as TransitionDef, "}", "top-1-line-6-item-0"),
        ]);
    }
}
