// Generated by the Freon Language Generator.
import { FreLanguage, FreProjectionHandler, FreBoxProvider } from "@freon4dsl/core";
import { freonConfiguration } from "../../config/FreonConfiguration.js";
import {} from "../../language/gen/index.js";
import { DummyUnitBoxProvider } from "../../editor/gen/index.js";

const map = new Map([
    // the main map
    [
        // Concept has special projection for (one of) its parts
        "DummyUnit",
        new Map([
            // Projection has special projection for (one of) the parts
            [
                // Projection has special projection for some part
                "default",
                new Map([
                    ["name", ""], // special projection
                ]),
            ],
        ]),
    ],
]);

/**
 * Adds all known projection groups to the root projection.
 * @param handler
 */
export function initializeProjections(handler: FreProjectionHandler) {
    for (const p of freonConfiguration.customProjection) {
        handler.addCustomProjection(p);
    }
    handler.initConceptToPropertyProjection(map);
    handler.initProviderConstructors(
        new Map<string, () => FreBoxProvider>([
            [
                "DummyUnit",
                () => {
                    return new DummyUnitBoxProvider(handler);
                },
            ],
        ]),
    );
    handler.initTableHeaders([]);
}

/**
 * Adds trigger and reference shortcut info to the in-memory representation of structure of the language metamodel.
 */
export function initializeEditorDef() {
    const conceptProjectionToPropertyProjection = new Map();
}
