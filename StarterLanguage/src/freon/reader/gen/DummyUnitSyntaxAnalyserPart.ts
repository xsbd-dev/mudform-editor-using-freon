// Generated by the Freon Language Generator.
import { net } from "net.akehurst.language-agl-processor";
import SPPTBranch = net.akehurst.language.api.sppt.SPPTBranch;
import { DummyUnit } from "../../language/gen/index.js";
import { StarterModelSyntaxAnalyser } from "./StarterModelSyntaxAnalyser.js";
import { FreNodeReference } from "@freon4dsl/core";

export class DummyUnitSyntaxAnalyserPart {
    mainAnalyser: StarterModelSyntaxAnalyser;

    constructor(mainAnalyser: StarterModelSyntaxAnalyser) {
        this.mainAnalyser = mainAnalyser;
    }

    /**
     * Method to transform branches that match the following rule:
     * DummyUnit = 'DummyUnit' identifier '\{'
     *	 '}' ;
     * @param branch
     * @private
     */
    public transformDummyUnit(branch: SPPTBranch): DummyUnit {
        // console.log('transformDummyUnit called: ' + branch.name);
        let __name: string;
        const children = this.mainAnalyser.getChildren(branch);
        __name = this.mainAnalyser.transformSharedPackedParseTreeNode(children[1]); // RHSPrimEntry

        return DummyUnit.create({
            name: __name,
            parseLocation: this.mainAnalyser.location(branch),
        });
    }
}
